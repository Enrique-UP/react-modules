doctype html
html
    head
        link(rel="stylesheet" type="text/css" href="./css/style.css")
        style(type="text/css").
            p{color:red;text-transform:uppercase;}
    title First PUG Page
    body
        main 
            header This is a header tag.
            h1 use this webpack
            | pug -w ./ -o ./html -P
            section
                p This is a paragraph tag.<br>
                    and This is a wrong method.

                

                p This is a paragraph tag.<br>
                    span This is a wrong method.

                
                p 
                    b Bold Text 
                    |   This is bold text.


                
                p 
                    | Lorem ipdum folor
                    b Bold Text 
                    |   This is bold text.



                p.
                    This is a paragraph tag.<br>
                    and This is also called a element.
                    Lorem ipdum dolor sit ameet.



                ul 
                    li This is a li tag #1.
                    li This is a li tag #2.
                    li This is a li tag #3.



                h1#head Calling id here.
                h1.head Calling class here.
                h1.head.
                    Calling class here.<br>
                    Calling class here.



                .block This is a class.
                #block This is a id.
                div.block This is a class.
                p.block This is a class.



                form.form#form
                    label Please see the tag of input.
                    input(type="text" name="Demo" data-js=`${5 > 2 ? "Ok" : "Not Ok"}`)
                    input(type="text" disabled)
                    input(type="text" disabled=false)
                    input(type="text" disabled=true)


                
                - const name = "Enrique"
                p Hi #{name}



                - const myClasses = ["class1", "class2", "class3"]
                div(class=myClasses) Adding multiple classes
                div.my-div(class=myClasses) Adding multiple classes

                - var classes = ['foo', 'bar', 'baz']
                a(class=classes)
                |
                |
                //- the class attribute may also be repeated to merge arrays
                a.bang(class=classes class=['bing'])



                - const myStyles = {"color": "white", "background": "brown"}
                div(style=myStyles) Inline css



                p(style="text-align:center; text-decoration:underline;display:inline-block;") This is inline css;



                - const pStyles = {"text-align":"center", "color":"blue"}
                p(style=pStyles) This is an another exp.
                
                
                
                - const myAttribues = {"src":"./images/demo.jpg", "alt":"Demo Image"}
                img&attributes(myAttribues)
                div#foo(data-bar="foo")&attributes({'data-foo': 'bar'})



                p !{"<i class='icon'>&#copy;</i>"}
                p #{"<i class='icon'>&#copy;</i>"}
                p 
                    a(href="https://pugjs.org/language/interpolation.html" target="_blank") https://pugjs.org/language/interpolation.html
                p 
                    a: img
                    //- <p><a><img /></a></p>



                h1 For/Each Loop

                - const employees = ['Angela', 'Jim', 'Nilson', 'Simone']
                    ul
                    each employee in employees
                        li= employee
                

                mixin pet(name)
                    li.pet= name
                ul
                    +pet('cat')
                    +pet('dog')
                    +pet('pig')


                each a in [1, 2, 3, 4, 5]
                    p= a

                each n, i in [50, 2, 3, 4, 5]
                    p= n + " - " + i

                - const names = ["Dom", "Sophie", "Mark"];
                each m, j in names
                    p= m + " - " + j

                - const grades = {"Web Dev": 85, "Software Design": 76}
                each o, p in grades
                    p= o + " - " + p

                - const gradess = {"Web Dev.": 85, "Software Design.": 76}
                for q, r in []
                    p= q + " - " + r
                
                for s, t in []
                    p= s + " - " + t
                else
                    p
                        strong No values are here


                
                h1 if else statements
                p My web applications
                //- - let user = {name: "Domenic", loggedIn: true, lastLogin:6}
                - let user = {name: "Domenic", loggedIn: false, lastLogin:6}
                if user.loggedIn
                    p
                        | Welcome back,
                        strong #{user.name}
                else if user.lastLogin < 10
                    p Your last login was #{user.lastLogin} minutes ago.
                    p
                        a(href="/login") Log In Again
                else
                    a(href="/login") Log In



                h1 Case Statement
                // orderStatus => Pending || In_Transit || Completed
                - const orderStatus = "Completed"
                //- const orderStatus = 1


                case orderStatus
                    //- when 1
                    when "Pending"
                        p Your order has been placed and will be sent shortly.
                    //- when 2
                    when "In_Transit"
                        p Your order is on the move - you should receive it soon!
                    when "Completed"
                        p Your order has been completed.
                    default
                        p Sorry! We are't sure what happend with your order...         

                